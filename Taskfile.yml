version: '3'

tasks:

  init:
    desc: Initialize dev environment.
    cmds:
      - brew install poetry pyenv tox zlib
      - pyenv install --skip-existing $(pyenv local)
      - poetry env use $(pyenv prefix $(pyenv local))/bin/python
      - task: install
      - task: init:python

  init:python:
    internal: true
    sources:
      - tox.ini
    vars:
      VERSIONS:
        sh: poetry run python bin/dev.py get-python-versions
    cmds:
      - cmd: pyenv install --skip-existing {{.ITEM}}
        for: {var: VERSIONS}

  install:
    desc: Install dev environment packages.
    cmds:
      - poetry lock --no-update
      - poetry install --with dev

  build:package:
    internal: true
    cmds:
      - poetry build -f wheel

  build:test_readme:
    internal: true
    sources: [README.md]
    generates: [tests/test_readme.txt]
    cmds:
      - poetry run python bin/dev.py get-markdown-code --lang=doctest README.md
          > tests/test_readme.txt

  test:
    desc: Run tests.
    deps: [install, build:test_readme, build:package]
    vars:
      VERSION: {sh: poetry version --short}
    cmds:
      - tox run --installpkg dist/caseutil-{{.VERSION}}-py2.py3-none-any.whl

  version:
    desc: Update project version. Use task version -- patch|minor|major|...
    vars:
      OLD_VERSION: {sh: poetry version --short}
    cmds:
      - poetry version {{.CLI_ARGS}}
      - sed -i '' -e "s|/caseutil/{{.OLD_VERSION}}/|/caseutil/$(poetry version --short)/|" README.md

  publish:
    desc: Publish package on PyPi.
    cmds:
      - poetry publish
